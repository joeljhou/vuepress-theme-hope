import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as l,c as o,a as n,b as a,d as i,e as s}from"./app-BteT4Cw8.js";const p={},r=s('<h1 id="类字节码详解" tabindex="-1"><a class="header-anchor" href="#类字节码详解"><span>类字节码详解</span></a></h1><blockquote><p>计算机只能运行由0和1构成的二进制格式。 要运行Java程序，必须先通过Java虚拟机（JVM）执行编译后的Java代码，这个编译后的代码就是<strong>Java字节码</strong>。</p></blockquote><h2 id="跨平台的基石" tabindex="-1"><a class="header-anchor" href="#跨平台的基石"><span>跨平台的基石</span></a></h2><p>Java字节码具有“平台无关性”和“语言无关性”。</p><ul><li><strong>平台无关性：</strong> 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行”</li><li><strong>语言无关性：</strong> 多种编程语言可以编译成字节码并在JVM（GraalVM）上运行，不仅限于Java</li></ul><figure><img src="https://img.geekyspace.cn/pictures/2024/202407200209120.png" alt="Java虚拟机提供的语言无关性" tabindex="0" loading="lazy"><figcaption>Java虚拟机提供的语言无关性</figcaption></figure><h2 id="class类文件结构" tabindex="-1"><a class="header-anchor" href="#class类文件结构"><span>Class类文件结构</span></a></h2><p>Java技术的良好向后兼容性得益于Class文件结构的稳定性， 每个Class文件对应一个类或接口的定义信息，是一组以8个字节为单位的二进制流。各数据项严格按顺序排列，没有任何分隔符。</p><p>Class文件格式类似于C语言的结构体，这种伪结构只有两种数据类型：“无符号数”和“表”。</p><ul><li><strong>无符号数：</strong> 基本数据类型，使用<code>u1</code>、<code>u2</code>、<code>u4</code>、<code>u8</code>表示1、2、4、8个字节的无符号数。 它们可以描述数字、索引引用、数量值或按照<code>UTF-8</code>编码的字符串值。</li><li><strong>表：</strong> 由多个无符号数或其他表构成的复合数据类型，通常以“_info”结尾。 表用于描述有层次关系的复合结构，整个Class文件本质上也是一个表，由按严格顺序排列的数据项构成。</li></ul>',10),u={href:"https://docs.oracle.com/javase/specs/jvms/se22/html/jvms-4.html",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"ClassFile",-1),m=s(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">ClassFile</span> <span class="token punctuation">{</span>
  u4 magic<span class="token punctuation">;</span>                   <span class="token comment">// 魔数 (0xCAFEBABE)，标识class文件格式</span>
  u2 minor_version<span class="token punctuation">;</span>           <span class="token comment">// 次版本号</span>
  u2 major_version<span class="token punctuation">;</span>           <span class="token comment">// 主版本号</span>
  u2 constant_pool_count<span class="token punctuation">;</span>     <span class="token comment">// 常量池计数</span>
  cp_info constant_pool<span class="token punctuation">[</span>constant_pool_count<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 常量池</span>
  u2 access_flags<span class="token punctuation">;</span>            <span class="token comment">// 访问标志</span>
  u2 this_class<span class="token punctuation">;</span>              <span class="token comment">// 当前类索引</span>
  u2 super_class<span class="token punctuation">;</span>             <span class="token comment">// 父类索引</span>
  u2 interfaces_count<span class="token punctuation">;</span>        <span class="token comment">// 接口计数</span>
  u2 interfaces<span class="token punctuation">[</span>interfaces_count<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 接口索引表</span>
  u2 fields_count<span class="token punctuation">;</span>            <span class="token comment">// 字段计数</span>
  field_info fields<span class="token punctuation">[</span>fields_count<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 字段表</span>
  u2 methods_count<span class="token punctuation">;</span>           <span class="token comment">// 方法计数</span>
  method_info methods<span class="token punctuation">[</span>methods_count<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 方法表</span>
  u2 attributes_count<span class="token punctuation">;</span>        <span class="token comment">// 属性计数</span>
  attribute_info attributes<span class="token punctuation">[</span>attributes_count<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 属性表</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过分析 ClassFile 的内容，我们便可以知道 class 文件的组成。</p><figure><img src="https://img.geekyspace.cn/pictures/2024/202407220149546.png" alt="ClassFile 内容分析" tabindex="0" loading="lazy"><figcaption>ClassFile 内容分析</figcaption></figure><h3 id="魔数与class文件的版本" tabindex="-1"><a class="header-anchor" href="#魔数与class文件的版本"><span>魔数与Class文件的版本</span></a></h3><p>每个Class文件的头4个字节被称为魔数（Magic Number），它的唯一作用是确定这个文件是否为一个能被虚拟机接受的Class文件。</p><h3 id="常量池" tabindex="-1"><a class="header-anchor" href="#常量池"><span>常量池</span></a></h3><h3 id="访问标志" tabindex="-1"><a class="header-anchor" href="#访问标志"><span>访问标志</span></a></h3><h3 id="类索引、父类索引与接口索引集合" tabindex="-1"><a class="header-anchor" href="#类索引、父类索引与接口索引集合"><span>类索引、父类索引与接口索引集合</span></a></h3><h3 id="字段表集合" tabindex="-1"><a class="header-anchor" href="#字段表集合"><span>字段表集合</span></a></h3><h3 id="方法表集合" tabindex="-1"><a class="header-anchor" href="#方法表集合"><span>方法表集合</span></a></h3><h3 id="属性表集合" tabindex="-1"><a class="header-anchor" href="#属性表集合"><span>属性表集合</span></a></h3>`,11);function h(v,g){const e=c("ExternalLinkIcon");return l(),o("div",null,[r,n("p",null,[n("a",u,[a("JVM虚拟机规范第四章"),i(e)]),a(" 中规定了Class文件必须是一个固定的"),d,a("结构，如下所示：")]),m])}const _=t(p,[["render",h],["__file","class.html.vue"]]),f=JSON.parse('{"path":"/md/jvm/basics/class.html","title":"类字节码详解","lang":"zh-CN","frontmatter":{"title":"类字节码详解","description":"类字节码详解 计算机只能运行由0和1构成的二进制格式。 要运行Java程序，必须先通过Java虚拟机（JVM）执行编译后的Java代码，这个编译后的代码就是Java字节码。 跨平台的基石 Java字节码具有“平台无关性”和“语言无关性”。 平台无关性： 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行” 语言无关性： 多种编程语言可以编...","author":"会敲代码的程序猿","isOriginal":true,"date":"2024-07-19T00:00:00.000Z","category":"JVM","tag":"JVM","order":2,"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/jvm/basics/class.html"}],["meta",{"property":"og:title","content":"类字节码详解"}],["meta",{"property":"og:description","content":"类字节码详解 计算机只能运行由0和1构成的二进制格式。 要运行Java程序，必须先通过Java虚拟机（JVM）执行编译后的Java代码，这个编译后的代码就是Java字节码。 跨平台的基石 Java字节码具有“平台无关性”和“语言无关性”。 平台无关性： 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行” 语言无关性： 多种编程语言可以编..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.geekyspace.cn/pictures/2024/202407200209120.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-21T17:57:00.000Z"}],["meta",{"property":"article:author","content":"会敲代码的程序猿"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2024-07-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-21T17:57:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类字节码详解\\",\\"image\\":[\\"https://img.geekyspace.cn/pictures/2024/202407200209120.png\\",\\"https://img.geekyspace.cn/pictures/2024/202407220149546.png\\"],\\"datePublished\\":\\"2024-07-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-21T17:57:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会敲代码的程序猿\\"}]}"]]},"headers":[{"level":2,"title":"跨平台的基石","slug":"跨平台的基石","link":"#跨平台的基石","children":[]},{"level":2,"title":"Class类文件结构","slug":"class类文件结构","link":"#class类文件结构","children":[{"level":3,"title":"魔数与Class文件的版本","slug":"魔数与class文件的版本","link":"#魔数与class文件的版本","children":[]},{"level":3,"title":"常量池","slug":"常量池","link":"#常量池","children":[]},{"level":3,"title":"访问标志","slug":"访问标志","link":"#访问标志","children":[]},{"level":3,"title":"类索引、父类索引与接口索引集合","slug":"类索引、父类索引与接口索引集合","link":"#类索引、父类索引与接口索引集合","children":[]},{"level":3,"title":"字段表集合","slug":"字段表集合","link":"#字段表集合","children":[]},{"level":3,"title":"方法表集合","slug":"方法表集合","link":"#方法表集合","children":[]},{"level":3,"title":"属性表集合","slug":"属性表集合","link":"#属性表集合","children":[]}]}],"git":{"createdTime":1721457632000,"updatedTime":1721584620000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":2}]},"readingTime":{"minutes":2.38,"words":713},"filePathRelative":"md/jvm/basics/class.md","localizedDate":"2024年7月19日","excerpt":"\\n<blockquote>\\n<p>计算机只能运行由0和1构成的二进制格式。\\n要运行Java程序，必须先通过Java虚拟机（JVM）执行编译后的Java代码，这个编译后的代码就是<strong>Java字节码</strong>。</p>\\n</blockquote>\\n<h2>跨平台的基石</h2>\\n<p>Java字节码具有“平台无关性”和“语言无关性”。</p>\\n<ul>\\n<li><strong>平台无关性：</strong> 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行”</li>\\n<li><strong>语言无关性：</strong> 多种编程语言可以编译成字节码并在JVM（GraalVM）上运行，不仅限于Java</li>\\n</ul>","copyright":{"author":"会敲代码的程序猿"},"autoDesc":true}');export{_ as comp,f as data};
