import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as t,e as i}from"./app-m66s08O3.js";const s={},n=i('<h1 id="类字节码详解" tabindex="-1"><a class="header-anchor" href="#类字节码详解"><span>类字节码详解</span></a></h1><h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言"><span>引言</span></a></h2><p>计算机不能直接运行Java代码。必须先运行Java虚拟机（JVM），再由JVM运行编译后的Java代码。 这个编译后的Java代码，就是我们要介绍的Java字节码。</p><h2 id="无关性的基石" tabindex="-1"><a class="header-anchor" href="#无关性的基石"><span>无关性的基石</span></a></h2><ul><li><strong>平台无关性：</strong> 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行”。</li><li><strong>语言无关性：</strong> 多种编程语言可以编译成字节码并在JVM上运行，不仅限于Java。</li></ul><figure><img src="https://img.geekyspace.cn/pictures/2024/202407200209120.png" alt="Java虚拟机提供的语言无关性" tabindex="0" loading="lazy"><figcaption>Java虚拟机提供的语言无关性</figcaption></figure><h2 id="java字节码文件" tabindex="-1"><a class="header-anchor" href="#java字节码文件"><span>Java字节码文件</span></a></h2><p>Class文件本质上是一组以8个字节为基础单位的二进制流，各数据项严格按顺序紧密排列，中间没有任何分隔符。 JVM根据其特定的规则解析该二进制数据，从而得到相关信息。</p><h3 id="class类文件的结构" tabindex="-1"><a class="header-anchor" href="#class类文件的结构"><span>Class类文件的结构</span></a></h3><figure><img src="https://img.geekyspace.cn/pictures/2024/202407200258362.png" alt="Class类文件的结构" tabindex="0" loading="lazy"><figcaption>Class类文件的结构</figcaption></figure><p>Java字节码是以类文件（<code>.class</code>）形式存储的，包含如下结构属性：</p><ol><li><strong>魔数：</strong> 用于标识类文件的起始部分，通常是固定的值（<code>0xCAFEBABE</code>）</li><li><strong>版本号：</strong> 表示类文件的版本，包括主版本号和次版本号，即编译时的Java版本</li><li><strong>常量池：</strong> 存储了类文件中用到的所有常量，包括字符串、数值和类引用等</li><li><strong>访问标志：</strong> 描述类或接口的访问权限和其他属性，如<code>public</code>、<code>abstract</code>、<code>final</code>等</li><li><strong>类索引、父类索引和接口索引集合：</strong> 分别指向常量池中的项，用于标识类、父类和实现的接口</li><li><strong>字段表：</strong> 定义类或接口中的成员变量，包括类型、名称和修饰符等信息</li><li><strong>方法表：</strong> 定义类或接口中的方法，包括名称、参数和修饰符等信息</li><li><strong>属性表：</strong> 存储类、字段、方法等相关的附加信息，如代码段、异常处理表等</li></ol>',12),o=[n];function r(l,c){return e(),t("div",null,o)}const d=a(s,[["render",r],["__file","class.html.vue"]]),h=JSON.parse('{"path":"/md/jvm/basics/class.html","title":"类字节码详解","lang":"zh-CN","frontmatter":{"title":"类字节码详解","description":"类字节码详解 引言 计算机不能直接运行Java代码。必须先运行Java虚拟机（JVM），再由JVM运行编译后的Java代码。 这个编译后的Java代码，就是我们要介绍的Java字节码。 无关性的基石 平台无关性： 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行”。 语言无关性： 多种编程语言可以编译成字节码并在JVM上运行，不仅限于J...","author":"会敲代码的程序猿","isOriginal":true,"date":"2024-07-19T00:00:00.000Z","category":"JVM","tag":"JVM","order":2,"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/jvm/basics/class.html"}],["meta",{"property":"og:title","content":"类字节码详解"}],["meta",{"property":"og:description","content":"类字节码详解 引言 计算机不能直接运行Java代码。必须先运行Java虚拟机（JVM），再由JVM运行编译后的Java代码。 这个编译后的Java代码，就是我们要介绍的Java字节码。 无关性的基石 平台无关性： 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行”。 语言无关性： 多种编程语言可以编译成字节码并在JVM上运行，不仅限于J..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.geekyspace.cn/pictures/2024/202407200209120.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-20T06:40:32.000Z"}],["meta",{"property":"article:author","content":"会敲代码的程序猿"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2024-07-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-20T06:40:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类字节码详解\\",\\"image\\":[\\"https://img.geekyspace.cn/pictures/2024/202407200209120.png\\",\\"https://img.geekyspace.cn/pictures/2024/202407200258362.png\\"],\\"datePublished\\":\\"2024-07-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-20T06:40:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会敲代码的程序猿\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"无关性的基石","slug":"无关性的基石","link":"#无关性的基石","children":[]},{"level":2,"title":"Java字节码文件","slug":"java字节码文件","link":"#java字节码文件","children":[{"level":3,"title":"Class类文件的结构","slug":"class类文件的结构","link":"#class类文件的结构","children":[]}]}],"git":{"createdTime":1721457632000,"updatedTime":1721457632000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1}]},"readingTime":{"minutes":1.74,"words":523},"filePathRelative":"md/jvm/basics/class.md","localizedDate":"2024年7月19日","excerpt":"\\n<h2>引言</h2>\\n<p>计算机不能直接运行Java代码。必须先运行Java虚拟机（JVM），再由JVM运行编译后的Java代码。\\n这个编译后的Java代码，就是我们要介绍的Java字节码。</p>\\n<h2>无关性的基石</h2>\\n<ul>\\n<li><strong>平台无关性：</strong> 字节码可以在任何支持JVM的平台上运行，实现“一次编写，到处运行”。</li>\\n<li><strong>语言无关性：</strong> 多种编程语言可以编译成字节码并在JVM上运行，不仅限于Java。</li>\\n</ul>\\n<figure><img src=\\"https://img.geekyspace.cn/pictures/2024/202407200209120.png\\" alt=\\"Java虚拟机提供的语言无关性\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Java虚拟机提供的语言无关性</figcaption></figure>","copyright":{"author":"会敲代码的程序猿"},"autoDesc":true}');export{d as comp,h as data};
