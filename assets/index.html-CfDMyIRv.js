import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as p,c as s,e as i,a as r,b as n,d as t,r as l}from"./app-DEQAvezK.js";const d={},g={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/beans/factory/BeanFactory.html",target:"_blank",rel:"noopener noreferrer"},c={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/ApplicationContext.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/beans/factory/BeanFactory.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.spring.io/spring-framework/docs/6.1.5/javadoc-api/org/springframework/context/ApplicationContext.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.spring.io/spring-framework/reference/core/beans/beanfactory.html",target:"_blank",rel:"noopener noreferrer"};function y(h,e){const o=l("ExternalLinkIcon");return p(),s("div",null,[e[13]||(e[13]=i('<h1 id="spring-核心技术" tabindex="-1"><a class="header-anchor" href="#spring-核心技术"><span>Spring 核心技术</span></a></h1><h2 id="核心技术" tabindex="-1"><a class="header-anchor" href="#核心技术"><span>核心技术</span></a></h2><p>Spring 框架的核心技术主要包括：</p><ul><li><strong>依赖注入（dependency injection），也称为控制反转（IoC）</strong></li><li>事件（events）</li><li>资源（resources）</li><li>国际化（i18n）</li><li>数据验证（validation）</li><li>数据绑定（data binding）</li><li>类型转换（type conversion）</li><li>SpEL（Spring Expression Language）</li><li><strong>面向切面编程（AOP）</strong></li></ul><h2 id="spring-ioc容器和bean简介" tabindex="-1"><a class="header-anchor" href="#spring-ioc容器和bean简介"><span>Spring IoC容器和Bean简介</span></a></h2><p><strong>Spring IoC（控制反转）也被称为依赖注入（DI）</strong></p><p>它是一个过程，对象仅通过构造参数、工厂方法参数或在<strong>对象实例</strong>被构造函数或工厂方法返回后，在其上设置的属性来定义它们的依赖关系。 在IoC容器创建Bean时，它会自动注入这些依赖项。 不再需要通<code>直接构造依赖项</code>或使用<code>服务定位器模式</code>等方式来管理对象的实例化或位置， 而是交由IoC容器来管理，因此称为<strong>控制反转</strong>。</p>',7)),r("p",null,[r("a",g,[e[0]||(e[0]=n("org.springframework.beans")),t(o)]),e[4]||(e[4]=n(" 和 ")),r("a",c,[e[1]||(e[1]=n("org.springframework.context")),t(o)]),e[5]||(e[5]=n(" 包是Spring Framework的IoC容器的基础。 ")),r("a",m,[e[2]||(e[2]=n("BeanFactory")),t(o)]),e[6]||(e[6]=n(" 接口提供了一种高级配置机制，能够管理任何类型的")),e[7]||(e[7]=r("code",null,"object",-1)),e[8]||(e[8]=n("对象。 ")),r("a",f,[e[3]||(e[3]=n("ApplicationContext")),t(o)]),e[9]||(e[9]=n(" 是 BeanFactory 的一个子接口。它增加了："))]),e[14]||(e[14]=i("<ul><li>与Spring的AOP特性更好的集成</li><li><code>Message resource</code>消息资源处理（用于国际化）</li><li><code>Event publication</code>事件发布</li><li>应用层特定的上下文，例如Web应用程序的<code>WebApplicationContext</code></li></ul><p>简而言之，<code>BeanFactory</code> 提供了配置框架和基本功能，<code>ApplicationContext</code> 添加了更多企业特定的功能。 <code>ApplicationContext</code> 是 <code>BeanFactory</code> 的一个超集。 在特别要求轻量级应用程序的情况下，可以考虑使用<code>BeanFactory</code>。</p>",2)),r("p",null,[e[11]||(e[11]=n("想要了解 BeanFactory 参阅 ")),r("a",u,[e[10]||(e[10]=n("BeanFactory API")),t(o)]),e[12]||(e[12]=n(" 。"))])])}const S=a(d,[["render",y],["__file","index.html.vue"]]),x=JSON.parse('{"path":"/md/spring-framework/core/","title":"Spring 核心技术","lang":"zh-CN","frontmatter":{"title":"Spring 核心技术","icon":"spring","author":"会敲代码的程序猿","isOriginal":true,"date":"2024-03-18T00:00:00.000Z","category":"Spring","tag":"Spring Framework","description":"Spring 核心技术 核心技术 Spring 框架的核心技术主要包括： 依赖注入（dependency injection），也称为控制反转（IoC） 事件（events） 资源（resources） 国际化（i18n） 数据验证（validation） 数据绑定（data binding） 类型转换（type conversion） SpEL（Sp...","head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/spring-framework/core/"}],["meta",{"property":"og:title","content":"Spring 核心技术"}],["meta",{"property":"og:description","content":"Spring 核心技术 核心技术 Spring 框架的核心技术主要包括： 依赖注入（dependency injection），也称为控制反转（IoC） 事件（events） 资源（resources） 国际化（i18n） 数据验证（validation） 数据绑定（data binding） 类型转换（type conversion） SpEL（Sp..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T17:14:35.000Z"}],["meta",{"property":"article:author","content":"会敲代码的程序猿"}],["meta",{"property":"article:tag","content":"Spring Framework"}],["meta",{"property":"article:published_time","content":"2024-03-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T17:14:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 核心技术\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T17:14:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会敲代码的程序猿\\"}]}"]]},"headers":[{"level":2,"title":"核心技术","slug":"核心技术","link":"#核心技术","children":[]},{"level":2,"title":"Spring IoC容器和Bean简介","slug":"spring-ioc容器和bean简介","link":"#spring-ioc容器和bean简介","children":[]}],"git":{"createdTime":1719508475000,"updatedTime":1719508475000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1}]},"readingTime":{"minutes":1.49,"words":446},"filePathRelative":"md/spring-framework/core/README.md","localizedDate":"2024年3月18日","excerpt":"\\n<h2>核心技术</h2>\\n<p>Spring 框架的核心技术主要包括：</p>\\n<ul>\\n<li><strong>依赖注入（dependency injection），也称为控制反转（IoC）</strong></li>\\n<li>事件（events）</li>\\n<li>资源（resources）</li>\\n<li>国际化（i18n）</li>\\n<li>数据验证（validation）</li>\\n<li>数据绑定（data binding）</li>\\n<li>类型转换（type conversion）</li>\\n<li>SpEL（Spring Expression Language）</li>\\n<li><strong>面向切面编程（AOP）</strong></li>\\n</ul>","copyright":{"author":"会敲代码的程序猿"},"autoDesc":true}');export{S as comp,x as data};
